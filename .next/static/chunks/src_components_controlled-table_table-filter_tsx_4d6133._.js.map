{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/controlled-table/table-filter.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport dynamic from 'next/dynamic';\nimport { ToggleColumns } from '@/components/ui/table';\nimport { PiMagnifyingGlassBold, PiFunnel, PiXBold } from 'react-icons/pi';\nimport { Button, ActionIcon, Input, Title } from 'rizzui';\nimport cn from '@/utils/class-names';\nimport { useMedia } from '@/hooks/use-media';\nconst Drawer = dynamic(() => import('rizzui').then((module) => module.Drawer), {\n  ssr: false,\n});\n\nfunction FilterDrawerView({\n  isOpen,\n  drawerTitle,\n  setOpenDrawer,\n  children,\n}: React.PropsWithChildren<{\n  drawerTitle?: string;\n  hasSearched?: boolean;\n  setOpenDrawer: React.Dispatch<React.SetStateAction<boolean>>;\n  isOpen?: boolean;\n}>) {\n  return (\n    <Drawer\n      size=\"sm\"\n      isOpen={isOpen ?? false}\n      onClose={() => setOpenDrawer(false)}\n      overlayClassName=\"dark:bg-opacity-40 dark:backdrop-blur-md\"\n      containerClassName=\"dark:bg-gray-100\"\n      className=\"z-[9999]\"\n    >\n      <div className=\"flex h-full flex-col p-5\">\n        <div className=\"-mx-5 mb-6 flex items-center justify-between border-b border-muted px-5 pb-4\">\n          <Title as=\"h5\">{drawerTitle}</Title>\n          <ActionIcon\n            size=\"sm\"\n            rounded=\"full\"\n            variant=\"text\"\n            title={'Close Filter'}\n            onClick={() => setOpenDrawer(false)}\n          >\n            <PiXBold className=\"h-4 w-4\" />\n          </ActionIcon>\n        </div>\n        <div className=\"flex-grow\">\n          <div className=\"grid grid-cols-1 gap-6 [&_.price-field>span.mr-2]:mb-1.5 [&_.price-field]:flex-col [&_.price-field]:items-start [&_.react-datepicker-wrapper]:w-full [&_.react-datepicker-wrapper_.w-72]:w-full [&_.text-gray-500]:text-gray-700 [&_button.h-9]:h-10 sm:[&_button.h-9]:h-11 [&_label>.h-9]:h-10 sm:[&_label>.h-9]:h-11 [&_label>.w-24.h-9]:w-full\">\n            {children}\n          </div>\n        </div>\n        <Button\n          size=\"lg\"\n          onClick={() => setOpenDrawer(false)}\n          className=\"mt-5 h-11 w-full text-sm\"\n        >\n          Show Results\n        </Button>\n      </div>\n    </Drawer>\n  );\n}\n\nexport type TableFilterProps = {\n  searchTerm: string;\n  onSearchClear: () => void;\n  onSearchChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  columns: { [key: string]: any }[];\n  checkedColumns: string[];\n  setCheckedColumns: React.Dispatch<React.SetStateAction<string[]>>;\n  hideIndex?: number;\n  children?: React.ReactNode;\n  drawerTitle?: string;\n  hasSearched?: boolean;\n  showSearchOnTheRight?: boolean;\n  enableDrawerFilter?: boolean;\n  menu?: React.ReactNode;\n};\n\nexport default function TableFilter({\n  searchTerm,\n  onSearchClear,\n  onSearchChange,\n  columns,\n  checkedColumns,\n  setCheckedColumns,\n  hideIndex,\n  drawerTitle = 'Table Filters',\n  hasSearched,\n  enableDrawerFilter = false,\n  showSearchOnTheRight = false,\n  menu,\n  children,\n}: TableFilterProps) {\n  const isMediumScreen = useMedia('(max-width: 1860px)', false);\n  const [showFilters, setShowFilters] = useState(true);\n  const [openDrawer, setOpenDrawer] = useState(false);\n\n  return (\n    <div className=\"table-filter mb-4 flex items-center justify-between\">\n      <div className=\"flex flex-wrap items-center gap-4\">\n        {!showSearchOnTheRight ? (\n          <Input\n            type=\"search\"\n            placeholder=\"Search by anything...\"\n            value={searchTerm}\n            onClear={onSearchClear}\n            onChange={onSearchChange}\n            inputClassName=\"h-9\"\n            clearable={true}\n            prefix={<PiMagnifyingGlassBold className=\"h-4 w-4\" />}\n          />\n        ) : null}\n\n        {showSearchOnTheRight && enableDrawerFilter ? (\n          <>{menu ? menu : null}</>\n        ) : null}\n\n        {children && (\n          <>\n            {isMediumScreen || enableDrawerFilter ? (\n              <FilterDrawerView\n                isOpen={openDrawer}\n                setOpenDrawer={setOpenDrawer}\n                drawerTitle={drawerTitle}\n                hasSearched={hasSearched}\n              >\n                {children}\n              </FilterDrawerView>\n            ) : (\n              <>{showFilters ? children : null}</>\n            )}\n          </>\n        )}\n      </div>\n\n      <div className=\"ms-4 flex flex-shrink-0 items-center\">\n        {showSearchOnTheRight ? (\n          <Input\n            type=\"search\"\n            placeholder=\"Search by anything...\"\n            value={searchTerm}\n            onClear={onSearchClear}\n            onChange={onSearchChange}\n            inputClassName=\"h-9\"\n            clearable={true}\n            prefix={<PiMagnifyingGlassBold className=\"h-4 w-4\" />}\n            className=\"me-2.5\"\n          />\n        ) : null}\n\n        {children ? (\n          <Button\n            {...(isMediumScreen || enableDrawerFilter\n              ? {\n                  onClick: () => {\n                    setOpenDrawer(() => !openDrawer);\n                  },\n                }\n              : { onClick: () => setShowFilters(() => !showFilters) })}\n            variant={'outline'}\n            className={cn(\n              'me-2.5 h-9 pe-3 ps-2.5',\n              !(isMediumScreen || enableDrawerFilter) &&\n                showFilters &&\n                'border-dashed border-gray-700'\n            )}\n          >\n            <PiFunnel className=\"me-1.5 h-[18px] w-[18px]\" strokeWidth={1.7} />\n            {!(isMediumScreen || enableDrawerFilter) && showFilters\n              ? 'Hide Filters'\n              : 'Filters'}\n          </Button>\n        ) : null}\n\n        <ToggleColumns\n          columns={columns}\n          checkedColumns={checkedColumns}\n          setCheckedColumns={setCheckedColumns}\n          hideIndex={hideIndex}\n        />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;;;;AASA,MAAM,SAAS,mRAAQ,IAAM,yPAAiB,IAAI,CAAC,CAAC,SAAW,OAAO,MAAM;;;;;;IAC1E,KAAK;;KADD;AAIN,SAAS,iBAAiB,EACxB,MAAM,EACN,WAAW,EACX,aAAa,EACb,QAAQ,EAMR;IACA,qBACE,6RAAC;QACC,MAAK;QACL,QAAQ,UAAU;QAClB,SAAS,IAAM,cAAc;QAC7B,kBAAiB;QACjB,oBAAmB;QACnB,WAAU;kBAEV,cAAA,6RAAC;YAAI,WAAU;;8BACb,6RAAC;oBAAI,WAAU;;sCACb;4BAAO,IAAG;sCAAM;;;;;;sCAChB;4BACE,MAAK;4BACL,SAAQ;4BACR,SAAQ;4BACR,OAAO;4BACP,SAAS,IAAM,cAAc;sCAE7B,cAAA;gCAAS,WAAU;;;;;;;;;;;;;;;;;8BAGvB,6RAAC;oBAAI,WAAU;8BACb,cAAA,6RAAC;wBAAI,WAAU;kCACZ;;;;;;;;;;;8BAGL;oBACE,MAAK;oBACL,SAAS,IAAM,cAAc;oBAC7B,WAAU;8BACX;;;;;;;;;;;;;;;;;AAMT;MAhDS;AAkEM,SAAS,YAAY,EAClC,UAAU,EACV,aAAa,EACb,cAAc,EACd,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,SAAS,EACT,cAAc,eAAe,EAC7B,WAAW,EACX,qBAAqB,KAAK,EAC1B,uBAAuB,KAAK,EAC5B,IAAI,EACJ,QAAQ,EACS;;IACjB,MAAM,iBAAiB,mTAAS,uBAAuB;IACvD,MAAM,CAAC,aAAa,eAAe,GAAG,+QAAS;IAC/C,MAAM,CAAC,YAAY,cAAc,GAAG,+QAAS;IAE7C,qBACE,6RAAC;QAAI,WAAU;;0BACb,6RAAC;gBAAI,WAAU;;oBACZ,CAAC,qCACA;wBACE,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,SAAS;wBACT,UAAU;wBACV,gBAAe;wBACf,WAAW;wBACX,sBAAQ;4BAAuB,WAAU;;;;;;;;;;+BAEzC;oBAEH,wBAAwB,mCACvB;kCAAG,OAAO,OAAO;wCACf;oBAEH,0BACC;kCACG,kBAAkB,mCACjB,6RAAC;4BACC,QAAQ;4BACR,eAAe;4BACf,aAAa;4BACb,aAAa;sCAEZ;;;;;iDAGH;sCAAG,cAAc,WAAW;;;;;;;;;0BAMpC,6RAAC;gBAAI,WAAU;;oBACZ,qCACC;wBACE,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,SAAS;wBACT,UAAU;wBACV,gBAAe;wBACf,WAAW;wBACX,sBAAQ;4BAAuB,WAAU;;;;;;wBACzC,WAAU;;;;;+BAEV;oBAEH,yBACC;wBACG,GAAI,kBAAkB,qBACnB;4BACE,SAAS;gCACP,cAAc,IAAM,CAAC;4BACvB;wBACF,IACA;4BAAE,SAAS,IAAM,eAAe,IAAM,CAAC;wBAAa,CAAC;wBACzD,SAAS;wBACT,WAAW,6IACT,0BACA,CAAC,CAAC,kBAAkB,kBAAkB,KACpC,eACA;;0CAGJ;gCAAU,WAAU;gCAA2B,aAAa;;;;;;4BAC3D,CAAC,CAAC,kBAAkB,kBAAkB,KAAK,cACxC,iBACA;;;;;;+BAEJ;kCAEJ;wBACE,SAAS;wBACT,gBAAgB;wBAChB,mBAAmB;wBACnB,WAAW;;;;;;;;;;;;;;;;;;AAKrB;GAzGwB;;;;;MAAA"}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}