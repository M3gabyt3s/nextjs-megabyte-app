{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/layouts/hamburger-button.tsx"],"sourcesContent":["'use client';\n\nimport {\n  DrawerPlacements,\n  useDrawer,\n} from '@/app/shared/drawer-views/use-drawer';\nimport { ActionIcon } from 'rizzui';\nimport cn from '@/utils/class-names';\n\ninterface Props {\n  view: JSX.Element;\n  placement?: DrawerPlacements;\n  customSize?: string;\n  className?: string;\n}\n\nexport default function HamburgerButton({\n  view,\n  placement = 'left',\n  customSize = '320px',\n  className,\n}: Props) {\n  const { openDrawer } = useDrawer();\n  return (\n    <ActionIcon\n      aria-label=\"Open Sidebar Menu\"\n      variant=\"text\"\n      className={cn('me-3 h-auto w-auto p-0 sm:me-4 xl:hidden', className)}\n      onClick={() =>\n        openDrawer({\n          view,\n          placement,\n          customSize,\n        })\n      }\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        strokeWidth={2}\n        stroke=\"currentColor\"\n        className=\"h-6 w-6\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          d=\"M3.75 6.75h16.5M3.75 12H12m-8.25 5.25h16.5\"\n        />\n      </svg>\n    </ActionIcon>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;;;;;AAgBe,SAAS,gBAAgB,EACtC,IAAI,EACJ,YAAY,MAAM,EAClB,aAAa,OAAO,EACpB,SAAS,EACH;IACN,MAAM,EAAE,UAAU,EAAE,GAAG;IACvB,qBACE;QACE,cAAW;QACX,SAAQ;QACR,WAAW,0IAAG,4CAA4C;QAC1D,SAAS,IACP,WAAW;gBACT;gBACA;gBACA;YACF;kBAGF,cAAA,wVAAC;YACC,OAAM;YACN,MAAK;YACL,SAAQ;YACR,aAAa;YACb,QAAO;YACP,WAAU;sBAEV,cAAA,wVAAC;gBACC,eAAc;gBACd,gBAAe;gBACf,GAAE;;;;;;;;;;;;;;;;AAKZ"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/layouts/messages-dropdown.tsx"],"sourcesContent":["'use client';\n\nimport Link from 'next/link';\nimport { RefObject, useState } from 'react';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { Title, Text, Popover, Avatar, Badge } from 'rizzui';\nimport cn from '@/utils/class-names';\nimport { routes } from '@/config/routes';\nimport { useMedia } from '@/hooks/use-media';\nimport SimpleBar from '@/components/ui/simplebar';\nimport { PiCheck } from 'react-icons/pi';\nimport { messagesData } from '@/data/messages';\n\ndayjs.extend(relativeTime);\n\nfunction MessagesList({\n  setIsOpen,\n}: {\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}) {\n  return (\n    <div className=\"w-[320px] text-left sm:w-[360px] 2xl:w-[420px] rtl:text-right\">\n      <div className=\"mb-2 flex items-center justify-between ps-6\">\n        <Title as=\"h5\" fontWeight=\"semibold\">\n          Messages\n        </Title>\n        <Link\n          href={routes.support.inbox}\n          onClick={() => setIsOpen(false)}\n          className=\"hover:underline\"\n        >\n          View all\n        </Link>\n      </div>\n      <SimpleBar className=\"max-h-[406px]\">\n        <div className=\"grid grid-cols-1 ps-4\">\n          {messagesData.map((item) => (\n            <div\n              key={item.name + item.id}\n              className=\"group grid cursor-pointer grid-cols-[auto_minmax(0,1fr)] gap-2.5 rounded-md px-2 py-2.5 pe-3 transition-colors hover:bg-gray-100 dark:hover:bg-gray-50\"\n            >\n              <div className={cn('relative', item.avatar.length > 1 && 'me-1')}>\n                <Avatar\n                  src={item.avatar[0]}\n                  name={item.name}\n                  className={cn(\n                    item.avatar.length > 1 &&\n                      'relative -end-1 -top-0.5 !h-9 !w-9'\n                  )}\n                />\n                {item.avatar.length > 1 && (\n                  <Avatar\n                    src={item.avatar[1]}\n                    name={item.name}\n                    className=\"absolute -bottom-1 end-1.5 !h-9 !w-9 border-2 border-gray-0 dark:border-gray-100\"\n                  />\n                )}\n              </div>\n              <div className=\"grid grid-cols-[minmax(0,1fr)_auto] items-center\">\n                <div className=\"w-full\">\n                  <Text className=\"mb-0.5 w-11/12 truncate text-sm font-semibold text-gray-900 dark:text-gray-700\">\n                    {item.name}\n                  </Text>\n                  <div className=\"flex\">\n                    <Text className=\"w-10/12 truncate pe-7 text-xs text-gray-500\">\n                      {item.message}\n                    </Text>\n                    <Text className=\"ms-auto whitespace-nowrap pe-8 text-xs text-gray-500\">\n                      {dayjs(item.sendTime).fromNow(true)}\n                    </Text>\n                  </div>\n                </div>\n                <div className=\"ms-auto flex-shrink-0\">\n                  {item.unRead ? (\n                    <Badge\n                      renderAsDot\n                      size=\"lg\"\n                      color=\"primary\"\n                      className=\"scale-90\"\n                    />\n                  ) : (\n                    <span className=\"inline-block rounded-full bg-gray-100 p-0.5 dark:bg-gray-50\">\n                      <PiCheck className=\"h-auto w-[9px]\" />\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </SimpleBar>\n    </div>\n  );\n}\n\nexport default function MessagesDropdown({\n  children,\n}: {\n  children: JSX.Element & { ref?: RefObject<any> };\n}) {\n  const isMobile = useMedia('(max-width: 480px)', false);\n  const [isOpen, setIsOpen] = useState(false);\n  return (\n    <Popover\n      isOpen={isOpen}\n      setIsOpen={setIsOpen}\n      shadow=\"sm\"\n      placement={isMobile ? 'bottom' : 'bottom-end'}\n    >\n      <Popover.Trigger>{children}</Popover.Trigger>\n      <Popover.Content className=\"z-[9999] pb-6 pe-6 ps-0 pt-5 dark:bg-gray-100 [&>svg]:hidden [&>svg]:dark:fill-gray-100 sm:[&>svg]:inline-flex\">\n        <MessagesList setIsOpen={setIsOpen} />\n      </Popover.Content>\n    </Popover>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;AAcA,qMAAM,MAAM;AAEZ,SAAS,aAAa,EACpB,SAAS,EAGV;IACC,qBACE,wVAAC;QAAI,WAAU;;0BACb,wVAAC;gBAAI,WAAU;;kCACb;wBAAO,IAAG;wBAAK,YAAW;kCAAW;;;;;;kCAGrC;wBACE,MAAM,kIAAO,OAAO,CAAC,KAAK;wBAC1B,SAAS,IAAM,UAAU;wBACzB,WAAU;kCACX;;;;;;;;;;;;0BAIH;gBAAW,WAAU;0BACnB,cAAA,wVAAC;oBAAI,WAAU;8BACZ,wIAAa,GAAG,CAAC,CAAC,qBACjB,wVAAC;4BAEC,WAAU;;8CAEV,wVAAC;oCAAI,WAAW,0IAAG,YAAY,KAAK,MAAM,CAAC,MAAM,GAAG,KAAK;;sDACvD;4CACE,KAAK,KAAK,MAAM,CAAC,EAAE;4CACnB,MAAM,KAAK,IAAI;4CACf,WAAW,0IACT,KAAK,MAAM,CAAC,MAAM,GAAG,KACnB;;;;;;wCAGL,KAAK,MAAM,CAAC,MAAM,GAAG,mBACpB;4CACE,KAAK,KAAK,MAAM,CAAC,EAAE;4CACnB,MAAM,KAAK,IAAI;4CACf,WAAU;;;;;;;;;;;;8CAIhB,wVAAC;oCAAI,WAAU;;sDACb,wVAAC;4CAAI,WAAU;;8DACb;oDAAM,WAAU;8DACb,KAAK,IAAI;;;;;;8DAEZ,wVAAC;oDAAI,WAAU;;sEACb;4DAAM,WAAU;sEACb,KAAK,OAAO;;;;;;sEAEf;4DAAM,WAAU;sEACb,qMAAM,KAAK,QAAQ,EAAE,OAAO,CAAC;;;;;;;;;;;;;;;;;;sDAIpC,wVAAC;4CAAI,WAAU;sDACZ,KAAK,MAAM,iBACV;gDACE,WAAW;gDACX,MAAK;gDACL,OAAM;gDACN,WAAU;;;;;qEAGZ,wVAAC;gDAAK,WAAU;0DACd,cAAA;oDAAS,WAAU;;;;;;;;;;;;;;;;;;;;;;;2BA5CtB,KAAK,IAAI,GAAG,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;AAuDtC;AAEe,SAAS,iBAAiB,EACvC,QAAQ,EAGT;IACC,MAAM,WAAW,gTAAS,sBAAsB;IAChD,MAAM,CAAC,QAAQ,UAAU,GAAG,iUAAS;IACrC,qBACE;QACE,QAAQ;QACR,WAAW;QACX,QAAO;QACP,WAAW,WAAW,WAAW;;0BAEjC,wVAAC,+VAAQ,OAAO;0BAAE;;;;;;0BAClB,wVAAC,+VAAQ,OAAO;gBAAC,WAAU;0BACzB,cAAA,wVAAC;oBAAa,WAAW;;;;;;;;;;;;;;;;;AAIjC"}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/layouts/profile-menu.tsx"],"sourcesContent":["'use client';\n\nimport { Title, Text, Avatar, Button, Popover } from 'rizzui';\nimport cn from '@/utils/class-names';\nimport { routes } from '@/config/routes';\nimport { signOut } from 'next-auth/react';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport { useEffect, useState } from 'react';\n\nexport default function ProfileMenu({\n  buttonClassName,\n  avatarClassName,\n  username = false,\n}: {\n  buttonClassName?: string;\n  avatarClassName?: string;\n  username?: boolean;\n}) {\n  return (\n    <ProfileMenuPopover>\n      <Popover.Trigger>\n        <button\n          className={cn(\n            'w-9 shrink-0 rounded-full outline-none focus-visible:ring-[1.5px] focus-visible:ring-gray-400 focus-visible:ring-offset-2 active:translate-y-px sm:w-10',\n            buttonClassName\n          )}\n        >\n          <Avatar\n            src=\"https://isomorphic-furyroad.s3.amazonaws.com/public/avatars/avatar-11.webp\"\n            name=\"John Doe\"\n            className={cn('!h-9 w-9 sm:!h-10 sm:!w-10', avatarClassName)}\n          />\n          {!!username && (\n            <span className=\"username hidden text-gray-200 dark:text-gray-700 md:inline-flex\">\n              Hi, Andry\n            </span>\n          )}\n        </button>\n      </Popover.Trigger>\n\n      <Popover.Content className=\"z-[9999] p-0 dark:bg-gray-100 [&>svg]:dark:fill-gray-100\">\n        <DropdownMenu />\n      </Popover.Content>\n    </ProfileMenuPopover>\n  );\n}\n\nfunction ProfileMenuPopover({ children }: React.PropsWithChildren<{}>) {\n  const pathname = usePathname();\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    setIsOpen(false);\n  }, [pathname]);\n\n  return (\n    <Popover\n      isOpen={isOpen}\n      setIsOpen={setIsOpen}\n      shadow=\"sm\"\n      placement=\"bottom-end\"\n    >\n      {children}\n    </Popover>\n  );\n}\n\nconst menuItems = [\n  {\n    name: 'My Profile',\n    href: routes.profile,\n  },\n  {\n    name: 'Account Settings',\n    href: routes.forms.profileSettings,\n  },\n  {\n    name: 'Activity Log',\n    href: '#',\n  },\n];\n\nfunction DropdownMenu() {\n  return (\n    <div className=\"w-64 text-left rtl:text-right\">\n      <div className=\"flex items-center border-b border-gray-300 px-6 pb-5 pt-6\">\n        <Avatar\n          src=\"https://isomorphic-furyroad.s3.amazonaws.com/public/avatars-blur/avatar-11.webp\"\n          name=\"Albert Flores\"\n        />\n        <div className=\"ms-3\">\n          <Title as=\"h6\" className=\"font-semibold\">\n            Albert Flores\n          </Title>\n          <Text className=\"text-gray-600\">flores@doe.io</Text>\n        </div>\n      </div>\n      <div className=\"grid px-3.5 py-3.5 font-medium text-gray-700\">\n        {menuItems.map((item) => (\n          <Link\n            key={item.name}\n            href={item.href}\n            className=\"group my-0.5 flex items-center rounded-md px-2.5 py-2 hover:bg-gray-100 focus:outline-none hover:dark:bg-gray-50/50\"\n          >\n            {item.name}\n          </Link>\n        ))}\n      </div>\n      <div className=\"border-t border-gray-300 px-6 pb-6 pt-5\">\n        <Button\n          className=\"h-auto w-full justify-start p-0 font-medium text-gray-700 outline-none focus-within:text-gray-600 hover:text-gray-900 focus-visible:ring-0\"\n          variant=\"text\"\n          onClick={() => signOut()}\n        >\n          Sign Out\n        </Button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;;;;;;;;AAUe,SAAS,YAAY,EAClC,eAAe,EACf,eAAe,EACf,WAAW,KAAK,EAKjB;IACC,qBACE,wVAAC;;0BACC,wVAAC,+VAAQ,OAAO;0BACd,cAAA,wVAAC;oBACC,WAAW,0IACT,2JACA;;sCAGF;4BACE,KAAI;4BACJ,MAAK;4BACL,WAAW,0IAAG,8BAA8B;;;;;;wBAE7C,CAAC,CAAC,0BACD,wVAAC;4BAAK,WAAU;sCAAkE;;;;;;;;;;;;;;;;;0BAOxF,wVAAC,+VAAQ,OAAO;gBAAC,WAAU;0BACzB,cAAA,wVAAC;;;;;;;;;;;;;;;;AAIT;AAEA,SAAS,mBAAmB,EAAE,QAAQ,EAA+B;IACnE,MAAM,WAAW;IACjB,MAAM,CAAC,QAAQ,UAAU,GAAG,iUAAS;IAErC,kUAAU;QACR,UAAU;IACZ,GAAG;QAAC;KAAS;IAEb,qBACE;QACE,QAAQ;QACR,WAAW;QACX,QAAO;QACP,WAAU;kBAET;;;;;;AAGP;AAEA,MAAM,YAAY;IAChB;QACE,MAAM;QACN,MAAM,kIAAO,OAAO;IACtB;IACA;QACE,MAAM;QACN,MAAM,kIAAO,KAAK,CAAC,eAAe;IACpC;IACA;QACE,MAAM;QACN,MAAM;IACR;CACD;AAED,SAAS;IACP,qBACE,wVAAC;QAAI,WAAU;;0BACb,wVAAC;gBAAI,WAAU;;kCACb;wBACE,KAAI;wBACJ,MAAK;;;;;;kCAEP,wVAAC;wBAAI,WAAU;;0CACb;gCAAO,IAAG;gCAAK,WAAU;0CAAgB;;;;;;0CAGzC;gCAAM,WAAU;0CAAgB;;;;;;;;;;;;;;;;;;0BAGpC,wVAAC;gBAAI,WAAU;0BACZ,UAAU,GAAG,CAAC,CAAC,qBACd;wBAEE,MAAM,KAAK,IAAI;wBACf,WAAU;kCAET,KAAK,IAAI;uBAJL,KAAK,IAAI;;;;;;;;;;0BAQpB,wVAAC;gBAAI,WAAU;0BACb,cAAA;oBACE,WAAU;oBACV,SAAQ;oBACR,SAAS,IAAM;8BAChB;;;;;;;;;;;;;;;;;AAMT"}},
    {"offset": {"line": 500, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 505, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/layouts/header-menu-right.tsx"],"sourcesContent":["import { Badge, ActionIcon } from 'rizzui';\nimport MessagesDropdown from '@/layouts/messages-dropdown';\nimport NotificationDropdown from '@/layouts/notification-dropdown';\nimport ProfileMenu from '@/layouts/profile-menu';\nimport SettingsButton from '@/components/settings/settings-button';\nimport RingBellSolidIcon from '@/components/icons/ring-bell-solid';\nimport ChatSolidIcon from '@/components/icons/chat-solid';\n\nexport default function HeaderMenuRight() {\n  return (\n    <div className=\"ms-auto grid shrink-0 grid-cols-4 items-center gap-2 text-gray-700 xs:gap-3 xl:gap-4\">\n      <ActionIcon\n        aria-label=\"Notification\"\n        variant=\"text\"\n        className=\"relative h-[34px] w-[34px] shadow backdrop-blur-md dark:bg-gray-100 md:h-9 md:w-9\"\n      >\n        <RingBellSolidIcon className=\"h-[18px] w-auto\" />\n        <Badge\n          renderAsDot\n          color=\"warning\"\n          enableOutlineRing\n          className=\"absolute right-2.5 top-2.5 -translate-y-1/3 translate-x-1/2\"\n        />\n      </ActionIcon>\n      <MessagesDropdown>\n        <ActionIcon\n          aria-label=\"Messages\"\n          variant=\"text\"\n          className=\"relative h-[34px] w-[34px] shadow backdrop-blur-md dark:bg-gray-100 md:h-9 md:w-9\"\n        >\n          <ChatSolidIcon className=\"h-[18px] w-auto\" />\n          <Badge\n            renderAsDot\n            color=\"success\"\n            enableOutlineRing\n            className=\"absolute right-2.5 top-2.5 -translate-y-1/3 translate-x-1/2\"\n          />\n        </ActionIcon>\n      </MessagesDropdown>\n\n      <SettingsButton />\n      <ProfileMenu />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAQe,SAAS;IACtB,qBACE,wVAAC;QAAI,WAAU;;0BACb;gBACE,cAAW;gBACX,SAAQ;gBACR,WAAU;;kCAEV;wBAAmB,WAAU;;;;;;kCAC7B;wBACE,WAAW;wBACX,OAAM;wBACN,iBAAiB;wBACjB,WAAU;;;;;;;;;;;;0BAGd;0BACE,cAAA;oBACE,cAAW;oBACX,SAAQ;oBACR,WAAU;;sCAEV;4BAAe,WAAU;;;;;;sCACzB;4BACE,WAAW;4BACX,OAAM;4BACN,iBAAiB;4BACjB,WAAU;;;;;;;;;;;;;;;;;0BAKhB;;;;;0BACA;;;;;;;;;;;AAGN"}},
    {"offset": {"line": 606, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 611, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/layouts/sticky-header.tsx"],"sourcesContent":["'use client';\n\nimport cn from '@/utils/class-names';\nimport { useIsMounted } from '@/hooks/use-is-mounted';\nimport { useWindowScroll } from '@/hooks/use-window-scroll';\n\ntype StickyHeaderProps = {\n  className?: string;\n  offset?: number;\n};\n\nexport default function StickyHeader({\n  offset = 2,\n  className,\n  children,\n}: React.PropsWithChildren<StickyHeaderProps>) {\n  const isMounted = useIsMounted();\n  const windowScroll = useWindowScroll();\n  return (\n    <header\n      className={cn(\n        'sticky top-0 z-[9999] flex items-center bg-gray-0/80 p-4 backdrop-blur-xl dark:bg-gray-50/50 md:px-5 lg:px-6',\n        ((isMounted && windowScroll.y) as number) > offset ? 'card-shadow' : '',\n        className\n      )}\n    >\n      {children}\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;AAWe,SAAS,aAAa,EACnC,SAAS,CAAC,EACV,SAAS,EACT,QAAQ,EACmC;IAC3C,MAAM,YAAY;IAClB,MAAM,eAAe;IACrB,qBACE,wVAAC;QACC,WAAW,0IACT,gHACA,AAAC,CAAC,aAAa,aAAa,CAAC,IAAe,SAAS,gBAAgB,IACrE;kBAGD;;;;;;AAGP"}},
    {"offset": {"line": 637, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 642, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/layouts/notification-dropdown.tsx"],"sourcesContent":["'use client';\n\nimport { RefObject, useState } from 'react';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { Popover, Title, Badge, Checkbox, Text } from 'rizzui';\nimport Link from 'next/link';\nimport { useMedia } from '@/hooks/use-media';\nimport SimpleBar from '@/components/ui/simplebar';\nimport { PiCheck } from 'react-icons/pi';\nimport { notificationsData } from '@/data/notifications';\n\ndayjs.extend(relativeTime);\n\nfunction NotificationsList({\n  setIsOpen,\n}: {\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}) {\n  return (\n    <div className=\"w-[320px] text-left sm:w-[360px] 2xl:w-[420px] rtl:text-right\">\n      <div className=\"mb-3 flex items-center justify-between ps-6\">\n        <Title as=\"h5\" fontWeight=\"semibold\">\n          Notifications\n        </Title>\n        <Checkbox\n          size=\"sm\"\n          label=\"Mark all as read\"\n          labelWeight=\"normal\"\n          labelClassName=\"text-sm\"\n        />\n      </div>\n      <SimpleBar className=\"max-h-[420px]\">\n        <div className=\"grid cursor-pointer grid-cols-1 gap-1 ps-4\">\n          {notificationsData.map((item) => (\n            <div\n              key={item.name + item.id}\n              className=\"group grid grid-cols-[auto_minmax(0,1fr)] gap-3 rounded-md px-2 py-2 pe-3 transition-colors hover:bg-gray-100 dark:hover:bg-gray-50\"\n            >\n              <div className=\"flex h-9 w-9 items-center justify-center rounded bg-gray-100/70 p-1 dark:bg-gray-50/50 [&>svg]:h-auto [&>svg]:w-5\">\n                <item.icon />\n              </div>\n              <div className=\"grid grid-cols-[minmax(0,1fr)_auto] items-center\">\n                <div className=\"w-full\">\n                  <Text className=\"mb-0.5 w-11/12 truncate text-sm font-semibold text-gray-900 dark:text-gray-700\">\n                    {item.name}\n                  </Text>\n                  <Text className=\"ms-auto whitespace-nowrap pe-8 text-xs text-gray-500\">\n                    {dayjs(item.sendTime).fromNow(true)}\n                  </Text>\n                </div>\n                <div className=\"ms-auto flex-shrink-0\">\n                  {item.unRead ? (\n                    <Badge\n                      renderAsDot\n                      size=\"lg\"\n                      color=\"primary\"\n                      className=\"scale-90\"\n                    />\n                  ) : (\n                    <span className=\"inline-block rounded-full bg-gray-100 p-0.5 dark:bg-gray-50\">\n                      <PiCheck className=\"h-auto w-[9px]\" />\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </SimpleBar>\n      <Link\n        href={'#'}\n        onClick={() => setIsOpen(false)}\n        className=\"-me-6 block px-6 pb-0.5 pt-3 text-center hover:underline\"\n      >\n        View All Activity\n      </Link>\n    </div>\n  );\n}\n\nexport default function NotificationDropdown({\n  children,\n}: {\n  children: JSX.Element & { ref?: RefObject<any> };\n}) {\n  const isMobile = useMedia('(max-width: 480px)', false);\n  const [isOpen, setIsOpen] = useState(false);\n  return (\n    <Popover\n      isOpen={isOpen}\n      setIsOpen={setIsOpen}\n      shadow=\"sm\"\n      placement={isMobile ? 'bottom' : 'bottom-end'}\n    >\n      <Popover.Trigger>{children}</Popover.Trigger>\n      <Popover.Content className=\"z-[9999] px-0 pb-4 pe-6 pt-5 dark:bg-gray-100 [&>svg]:hidden [&>svg]:dark:fill-gray-100 sm:[&>svg]:inline-flex\">\n        <NotificationsList setIsOpen={setIsOpen} />\n      </Popover.Content>\n    </Popover>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;;;;;;;AAYA,qMAAM,MAAM;AAEZ,SAAS,kBAAkB,EACzB,SAAS,EAGV;IACC,qBACE,wVAAC;QAAI,WAAU;;0BACb,wVAAC;gBAAI,WAAU;;kCACb;wBAAO,IAAG;wBAAK,YAAW;kCAAW;;;;;;kCAGrC;wBACE,MAAK;wBACL,OAAM;wBACN,aAAY;wBACZ,gBAAe;;;;;;;;;;;;0BAGnB;gBAAW,WAAU;0BACnB,cAAA,wVAAC;oBAAI,WAAU;8BACZ,kJAAkB,GAAG,CAAC,CAAC,qBACtB,wVAAC;4BAEC,WAAU;;8CAEV,wVAAC;oCAAI,WAAU;8CACb,cAAA,wVAAC,KAAK,IAAI;;;;;;;;;;8CAEZ,wVAAC;oCAAI,WAAU;;sDACb,wVAAC;4CAAI,WAAU;;8DACb;oDAAM,WAAU;8DACb,KAAK,IAAI;;;;;;8DAEZ;oDAAM,WAAU;8DACb,qMAAM,KAAK,QAAQ,EAAE,OAAO,CAAC;;;;;;;;;;;;sDAGlC,wVAAC;4CAAI,WAAU;sDACZ,KAAK,MAAM,iBACV;gDACE,WAAW;gDACX,MAAK;gDACL,OAAM;gDACN,WAAU;;;;;qEAGZ,wVAAC;gDAAK,WAAU;0DACd,cAAA;oDAAS,WAAU;;;;;;;;;;;;;;;;;;;;;;;2BAzBtB,KAAK,IAAI,GAAG,KAAK,EAAE;;;;;;;;;;;;;;;0BAkChC;gBACE,MAAM;gBACN,SAAS,IAAM,UAAU;gBACzB,WAAU;0BACX;;;;;;;;;;;;AAKP;AAEe,SAAS,qBAAqB,EAC3C,QAAQ,EAGT;IACC,MAAM,WAAW,gTAAS,sBAAsB;IAChD,MAAM,CAAC,QAAQ,UAAU,GAAG,iUAAS;IACrC,qBACE;QACE,QAAQ;QACR,WAAW;QACX,QAAO;QACP,WAAW,WAAW,WAAW;;0BAEjC,wVAAC,+VAAQ,OAAO;0BAAE;;;;;;0BAClB,wVAAC,+VAAQ,OAAO;gBAAC,WAAU;0BACzB,cAAA,wVAAC;oBAAkB,WAAW;;;;;;;;;;;;;;;;;AAItC"}},
    {"offset": {"line": 854, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 859, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/layouts/nav-menu/nav-menu-context.tsx"],"sourcesContent":["'use client';\nimport React, {\n  Dispatch,\n  MutableRefObject,\n  createContext,\n  useContext,\n} from 'react';\nimport type {\n  ContentUiProps,\n  InitialState,\n  ItemRef,\n  NavMenuDirection,\n} from './nav-menu-types';\n\nexport const initialState: InitialState = {\n  itemWrapperLeft: null,\n  itemWrapperRight: null,\n  itemWrapperTop: null,\n  itemWrapperHeight: null,\n  hovering: null,\n  hoveringElRect: null,\n  hoveringWidth: null,\n  popoverLeft: null,\n  popoverHeight: null,\n  popoverWidth: null,\n};\n\ninterface NavMenuContextProps extends InitialState {\n  set: Dispatch<any>;\n  contentRefs: MutableRefObject<(HTMLElement | null)[]>;\n  contentUiPropsRefs: MutableRefObject<(ContentUiProps | null)[]>;\n  items: React.MutableRefObject<(ItemRef | null)[]>;\n  dir: NavMenuDirection;\n  handleMouseEnter: (index: number, el: HTMLElement) => void;\n}\n\nconst NavMenuContext = createContext<NavMenuContextProps | null>(null);\n\nexport function NavMenuProvider({\n  value,\n  children,\n}: React.PropsWithChildren<{ value: NavMenuContextProps }>) {\n  return (\n    <NavMenuContext.Provider value={value}>{children}</NavMenuContext.Provider>\n  );\n}\n\nexport const useNavMenu = () => {\n  const context = useContext(NavMenuContext);\n  if (!context) {\n    throw new Error('useNavMenu must be used within a NavMenuProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":";;;;;;;;AAAA;;;AAcO,MAAM,eAA6B;IACxC,iBAAiB;IACjB,kBAAkB;IAClB,gBAAgB;IAChB,mBAAmB;IACnB,UAAU;IACV,gBAAgB;IAChB,eAAe;IACf,aAAa;IACb,eAAe;IACf,cAAc;AAChB;AAWA,MAAM,+BAAiB,sUAA0C;AAE1D,SAAS,gBAAgB,EAC9B,KAAK,EACL,QAAQ,EACgD;IACxD,qBACE,wVAAC,eAAe,QAAQ;QAAC,OAAO;kBAAQ;;;;;;AAE5C;AAEO,MAAM,aAAa;IACxB,MAAM,UAAU,mUAAW;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT"}},
    {"offset": {"line": 900, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 905, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/layouts/nav-menu/nav-menu-trigger.tsx"],"sourcesContent":["'use client';\n\nimport React, { Fragment } from 'react';\nimport { useNavMenu } from './nav-menu-context';\nimport cn from '@/utils/class-names';\nimport { ItemTriggerRef, NavMenuTriggerProps } from './nav-menu-types';\n\nexport const NavMenuTrigger = React.forwardRef<\n  HTMLButtonElement,\n  NavMenuTriggerProps\n>(({ triggerType = 'hover', className, children, ...props }, ref) => {\n  /*\n    REASON OF IGNORING TS ERROR: Noted below. \n    */\n  // @ts-ignore\n  const { index, ...restProps } = props;\n\n  const { handleMouseEnter: trigger } = useNavMenu();\n  const NavMenuButton: React.ElementType = 'li' as React.ElementType;\n\n  function handleClick(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    props.onClick && props.onClick(e);\n    triggerType === 'click' && trigger(index as number, e.currentTarget);\n  }\n\n  function handleMouseEnter(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    props.onMouseEnter && props.onMouseEnter(e);\n    triggerType === 'hover' && trigger(index as number, e.currentTarget);\n  }\n\n  return (\n    <NavMenuButton\n      ref={ref}\n      onClick={handleClick}\n      onMouseEnter={handleMouseEnter}\n      className={cn('cursor-pointer', className)}\n      {...restProps}\n    >\n      {children}\n    </NavMenuButton>\n  );\n});\n\nNavMenuTrigger.displayName = 'NavMenuTrigger';\n\ntype NavMenuTriggerWrapperProps = {\n  items: (ItemTriggerRef | null | undefined)[];\n  menuClassName?: string;\n};\n\nexport function NavMenuTriggerWrapper({\n  items,\n  menuClassName,\n}: NavMenuTriggerWrapperProps) {\n  const wrapperRef = React.useRef<any>();\n  const { set } = useNavMenu();\n\n  React.useEffect(() => {\n    set({\n      itemWrapperLeft:\n        wrapperRef.current.getBoundingClientRect().left + window.scrollX,\n      itemWrapperRight:\n        wrapperRef.current.getBoundingClientRect().right + window.scrollX,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <menu\n      className={cn('nav-menu-trigger-wrapper flex gap-6', menuClassName)}\n      ref={wrapperRef}\n    >\n      {items.map((item, index: number) => {\n        return (\n          <Fragment key={index}>\n            {React.Children.map(item?.component, (child) => {\n              if (React.isValidElement(child)) {\n                return React.cloneElement(child, {\n                  ...item?.props,\n                  /*\n                  REASON OF IGNORING TS ERROR:\n                  We need the index of the individual item in the <NavMenu.Trigger></NavMenu.Trigger> Component internally to handle the content/dropdown slide animation. Users won't need these props. if the user pass this props and we use the user provided index props for our internal logic then the UI interaction might not work properly. in our cases if user passed `index` props , user provided index props will not effect the UI. because we are internally managing this props based on our internal logic. and in typescript project, user will get a typescript error. So, last of all what is happening here? we are here able to passing and getting the Index props internally but user is not able to pass the index props from their end. */\n                  // @ts-ignore\n                  index: index,\n                });\n              }\n              return null;\n            })}\n          </Fragment>\n        );\n      })}\n    </menu>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;AAOO,MAAM,+BAAiB,gUAAM,UAAU,CAG5C,CAAC,EAAE,cAAc,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IAC3D;;IAEE,GACF,aAAa;IACb,MAAM,EAAE,KAAK,EAAE,GAAG,WAAW,GAAG;IAEhC,MAAM,EAAE,kBAAkB,OAAO,EAAE,GAAG;IACtC,MAAM,gBAAmC;IAEzC,SAAS,YAAY,CAA+C;QAClE,MAAM,OAAO,IAAI,MAAM,OAAO,CAAC;QAC/B,gBAAgB,WAAW,QAAQ,OAAiB,EAAE,aAAa;IACrE;IAEA,SAAS,iBAAiB,CAA+C;QACvE,MAAM,YAAY,IAAI,MAAM,YAAY,CAAC;QACzC,gBAAgB,WAAW,QAAQ,OAAiB,EAAE,aAAa;IACrE;IAEA,qBACE,wVAAC;QACC,KAAK;QACL,SAAS;QACT,cAAc;QACd,WAAW,0IAAG,kBAAkB;QAC/B,GAAG,SAAS;kBAEZ;;;;;;AAGP;AAEA,eAAe,WAAW,GAAG;AAOtB,SAAS,sBAAsB,EACpC,KAAK,EACL,aAAa,EACc;IAC3B,MAAM,aAAa,gUAAM,MAAM;IAC/B,MAAM,EAAE,GAAG,EAAE,GAAG;IAEhB,gUAAM,SAAS,CAAC;QACd,IAAI;YACF,iBACE,WAAW,OAAO,CAAC,qBAAqB,GAAG,IAAI,GAAG,OAAO,OAAO;YAClE,kBACE,WAAW,OAAO,CAAC,qBAAqB,GAAG,KAAK,GAAG,OAAO,OAAO;QACrE;IACA,uDAAuD;IACzD,GAAG,EAAE;IAEL,qBACE,wVAAC;QACC,WAAW,0IAAG,uCAAuC;QACrD,KAAK;kBAEJ,MAAM,GAAG,CAAC,CAAC,MAAM;YAChB,qBACE;0BACG,gUAAM,QAAQ,CAAC,GAAG,CAAC,MAAM,WAAW,CAAC;oBACpC,kBAAI,gUAAM,cAAc,CAAC,QAAQ;wBAC/B,qBAAO,gUAAM,YAAY,CAAC,OAAO;4BAC/B,GAAG,MAAM,KAAK;4BACd;;ouBAEktB,GACltB,aAAa;4BACb,OAAO;wBACT;oBACF;oBACA,OAAO;gBACT;eAba;;;;;QAgBnB;;;;;;AAGN"}},
    {"offset": {"line": 987, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 992, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/layouts/nav-menu/nav-menu-content.tsx"],"sourcesContent":["'use client';\nimport React, { Fragment } from 'react';\nimport { useNavMenu } from './nav-menu-context';\nimport cn from '@/utils/class-names';\nimport { useClientWidth } from '@/hooks/use-client-width';\nimport type {\n  ContentWrapperRounded,\n  ContentWrapperShadow,\n  ItemContentRef,\n  NavMenuContentProps,\n} from './nav-menu-types';\n\nexport function NavMenuContent({ children }: NavMenuContentProps) {\n  return <>{children}</>;\n}\n\nNavMenuContent.displayName = 'NavMenuContent';\n\nconst menuContentClassNames = {\n  base: 'content-wrapper rounded-lg shadow-lg bg-white dark:bg-gray-100 transform-gpu shadow-gray-400/10 overflow-hidden duration-300',\n  rounded: {\n    sm: 'rounded-sm',\n    md: 'rounded-md',\n    lg: 'rounded-lg',\n    xl: 'rounded-xl',\n    none: 'rounded-none',\n  },\n  shadow: {\n    sm: 'shadow-sm',\n    md: 'shadow-md',\n    lg: 'shadow-lg',\n    xl: 'shadow-xl',\n    none: 'shadow-none',\n  },\n};\n\ntype NavMenuContentWrapperProps = {\n  items: (ItemContentRef | null | undefined)[];\n  menuContentClassName?: string;\n  fullscreen?: boolean;\n  floatingOffset: number;\n};\n\nexport function NavMenuContentWrapper({\n  items,\n  menuContentClassName,\n  fullscreen = false,\n  floatingOffset,\n}: NavMenuContentWrapperProps) {\n  const clientWidth = useClientWidth();\n\n  const {\n    hovering,\n    contentRefs,\n    contentUiPropsRefs,\n    popoverLeft,\n    hoveringWidth,\n    hoveringElRect,\n    popoverHeight,\n    popoverWidth,\n    dir,\n  } = useNavMenu();\n\n  const roundedKey = (contentUiPropsRefs.current[hovering!]?.rounded ||\n    'md') as ContentWrapperRounded;\n  const shadowKey = (contentUiPropsRefs.current[hovering!]?.shadow ||\n    'md') as ContentWrapperShadow;\n\n  const negativeXLtrValue =\n    clientWidth - hoveringElRect?.x! - floatingOffset < popoverWidth!\n      ? popoverWidth! -\n        (clientWidth - hoveringElRect?.x! - floatingOffset)! +\n        floatingOffset\n      : 0;\n\n  const leftRtl =\n    popoverWidth! > hoveringElRect?.x! + hoveringWidth! - floatingOffset\n      ? popoverLeft! +\n        hoveringWidth! -\n        hoveringWidth! -\n        hoveringElRect?.x! +\n        floatingOffset\n      : popoverLeft! + hoveringWidth! - popoverWidth!;\n\n  return (\n    <>\n      <div\n        style={{\n          ...{ '--client-width': `${clientWidth}px` },\n          ...(!fullscreen\n            ? {\n                left:\n                  dir === 'ltr'\n                    ? popoverLeft! - Math.abs(negativeXLtrValue)\n                    : leftRtl!,\n                width: popoverWidth || 0,\n                position: 'absolute',\n              }\n            : {\n                width: 'var(--client-width)',\n                position: 'fixed',\n                insetInlineStart: 0,\n              }),\n          transformOrigin: 'top',\n          height: popoverHeight || 0,\n        }}\n        className={cn(\n          menuContentClassNames.base,\n          menuContentClassNames.rounded[roundedKey],\n          menuContentClassNames.shadow[shadowKey],\n          menuContentClassName,\n          hovering !== null\n            ? 'visible scale-y-100 opacity-100 transition-all'\n            : 'invisible scale-y-95 opacity-0',\n          !items[hovering!]?.component && 'border-none opacity-0 shadow-none'\n        )}\n      >\n        {items.map((item, index) => {\n          const uiProps = {\n            // @ts-ignore\n            rounded: item?.component?.props?.rounded || null,\n            // @ts-ignore\n            shadow: item?.component?.props?.shadow || null,\n          };\n          return (\n            <Fragment key={index}>\n              <Wrapper\n                fullscreen={fullscreen}\n                hovering={hovering}\n                index={index}\n              >\n                <div\n                  ref={(element) => {\n                    contentUiPropsRefs.current[index] = uiProps;\n                    contentRefs.current[index] = element;\n                  }}\n                  className={cn(\n                    'w-32',\n                    // @ts-ignore\n                    item?.component?.props?.children?.props?.className\n                  )}\n                >\n                  {/* children of <NavMenu.Content></NavMenu.Content>*/}\n                  {/* @ts-ignore */}\n                  {item?.component?.props?.children?.props?.children}\n                </div>\n              </Wrapper>\n            </Fragment>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n\ntype WrapperProps = {\n  children: React.ReactNode;\n  hovering: number | null;\n  index: number;\n  fullscreen: boolean;\n};\n\nfunction Wrapper(props: WrapperProps) {\n  return (\n    <div\n      className={cn(\n        'absolute start-0 top-0 w-full overflow-hidden transition-all duration-300 ease-in-out',\n        props.hovering === props.index\n          ? 'opacity-100'\n          : 'pointer-events-none translate-x-0 opacity-0',\n        props.hovering === props.index\n          ? 'transform-none'\n          : props.hovering! > props.index\n            ? '-translate-x-1/4'\n            : 'translate-x-1/4',\n        props.hovering === null && 'translate-x-0 opacity-0'\n      )}\n    >\n      {props.children}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;;;AAYO,SAAS,eAAe,EAAE,QAAQ,EAAuB;IAC9D,qBAAO;kBAAG;;AACZ;AAEA,eAAe,WAAW,GAAG;AAE7B,MAAM,wBAAwB;IAC5B,MAAM;IACN,SAAS;QACP,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,MAAM;IACR;IACA,QAAQ;QACN,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,MAAM;IACR;AACF;AASO,SAAS,sBAAsB,EACpC,KAAK,EACL,oBAAoB,EACpB,aAAa,KAAK,EAClB,cAAc,EACa;IAC3B,MAAM,cAAc;IAEpB,MAAM,EACJ,QAAQ,EACR,WAAW,EACX,kBAAkB,EAClB,WAAW,EACX,aAAa,EACb,cAAc,EACd,aAAa,EACb,YAAY,EACZ,GAAG,EACJ,GAAG;IAEJ,MAAM,aAAc,mBAAmB,OAAO,CAAC,SAAU,EAAE,WACzD;IACF,MAAM,YAAa,mBAAmB,OAAO,CAAC,SAAU,EAAE,UACxD;IAEF,MAAM,oBACJ,cAAc,gBAAgB,IAAK,iBAAiB,eAChD,eACA,CAAC,cAAc,gBAAgB,IAAK,cAAc,IAClD,iBACA;IAEN,MAAM,UACJ,eAAgB,gBAAgB,IAAK,gBAAiB,iBAClD,cACA,gBACA,gBACA,gBAAgB,IAChB,iBACA,cAAe,gBAAiB;IAEtC,qBACE;kBACE,cAAA,wVAAC;YACC,OAAO;gBACL,GAAG;oBAAE,kBAAkB,CAAC,EAAE,YAAY,EAAE,CAAC;gBAAC,CAAC;gBAC3C,GAAI,CAAC,aACD;oBACE,MACE,QAAQ,QACJ,cAAe,KAAK,GAAG,CAAC,qBACxB;oBACN,OAAO,gBAAgB;oBACvB,UAAU;gBACZ,IACA;oBACE,OAAO;oBACP,UAAU;oBACV,kBAAkB;gBACpB,CAAC;gBACL,iBAAiB;gBACjB,QAAQ,iBAAiB;YAC3B;YACA,WAAW,0IACT,sBAAsB,IAAI,EAC1B,sBAAsB,OAAO,CAAC,WAAW,EACzC,sBAAsB,MAAM,CAAC,UAAU,EACvC,sBACA,aAAa,OACT,mDACA,kCACJ,CAAC,KAAK,CAAC,SAAU,EAAE,aAAa;sBAGjC,MAAM,GAAG,CAAC,CAAC,MAAM;gBAChB,MAAM,UAAU;oBACd,aAAa;oBACb,SAAS,MAAM,WAAW,OAAO,WAAW;oBAC5C,aAAa;oBACb,QAAQ,MAAM,WAAW,OAAO,UAAU;gBAC5C;gBACA,qBACE;8BACE,cAAA,wVAAC;wBACC,YAAY;wBACZ,UAAU;wBACV,OAAO;kCAEP,cAAA,wVAAC;4BACC,KAAK,CAAC;gCACJ,mBAAmB,OAAO,CAAC,MAAM,GAAG;gCACpC,YAAY,OAAO,CAAC,MAAM,GAAG;4BAC/B;4BACA,WAAW,0IACT,QACA,aAAa;4BACb,MAAM,WAAW,OAAO,UAAU,OAAO;sCAK1C,MAAM,WAAW,OAAO,UAAU,OAAO;;;;;;;;;;;mBAnBjC;;;;;YAwBnB;;;;;;;AAIR;AASA,SAAS,QAAQ,KAAmB;IAClC,qBACE,wVAAC;QACC,WAAW,0IACT,yFACA,MAAM,QAAQ,KAAK,MAAM,KAAK,GAC1B,gBACA,+CACJ,MAAM,QAAQ,KAAK,MAAM,KAAK,GAC1B,mBACA,MAAM,QAAQ,GAAI,MAAM,KAAK,GAC3B,qBACA,mBACN,MAAM,QAAQ,KAAK,QAAQ;kBAG5B,MAAM,QAAQ;;;;;;AAGrB"}},
    {"offset": {"line": 1110, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1115, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/layouts/nav-menu/nav-menu-item.tsx"],"sourcesContent":["'use client';\nimport React from 'react';\nimport cn from '@/utils/class-names';\nimport { NavMenuTrigger, NavMenuTriggerWrapper } from './nav-menu-trigger';\nimport { NavMenuContent, NavMenuContentWrapper } from './nav-menu-content';\nimport { useNavMenu } from './nav-menu-context';\nimport { ItemRef } from './nav-menu-types';\n\ntype NavMenuItemProps = {\n  children: React.ReactNode;\n};\n\nexport function NavMenuItem({ children }: NavMenuItemProps) {\n  return (\n    <>\n      {React.Children.map(children, (child) => {\n        if (\n          React.isValidElement(child) &&\n          (child.type === NavMenuTrigger || child.type === NavMenuContent)\n        ) {\n          return child;\n        }\n        return null;\n      })}\n    </>\n  );\n}\n\nNavMenuItem.displayName = 'NavMenuItem';\n\ntype NavMenuItemWrapperProps = {\n  className?: string;\n  menuClassName?: string;\n  menuContentClassName?: string;\n  children: React.ReactNode;\n  fullscreen: boolean;\n  floatingOffset: number;\n};\n\nexport function NavMenuItemWrapper(props: NavMenuItemWrapperProps) {\n  const {\n    className,\n    menuClassName,\n    menuContentClassName,\n    children,\n    fullscreen,\n    floatingOffset,\n  } = props;\n  const wrapperRef = React.useRef<HTMLDivElement>(null);\n  const { items, set } = useNavMenu();\n\n  React.Children.map(children, (child, idx) => {\n    const itemObj: ItemRef = {\n      trigger: { component: null, props: null },\n      content: { component: null, props: null },\n    };\n\n    if (\n      React.isValidElement(child) &&\n      child.props &&\n      child.props.children &&\n      child.props.children.length\n    ) {\n      child?.props?.children?.map((item: React.ReactNode) => {\n        if (React.isValidElement(item)) {\n          if (item.type === NavMenuTrigger) {\n            itemObj.trigger.component = item;\n            itemObj.trigger.props = item.props;\n          } else if (item.type === NavMenuContent) {\n            itemObj.content.component = item;\n            itemObj.content.props = item.props;\n          }\n        }\n      });\n      items.current[idx] = itemObj;\n    } else if (\n      React.isValidElement(child) &&\n      child.props &&\n      // @ts-ignore\n      child.props.children\n    ) {\n      // @ts-ignore\n      const item = child.props.children;\n      if (item.type === NavMenuTrigger) {\n        itemObj.trigger.component = item;\n        itemObj.trigger.props = item.props;\n      } else if (item.type === NavMenuContent) {\n        itemObj.content.component = item;\n        itemObj.content.props = item.props;\n      }\n      items.current[idx] = itemObj;\n    }\n  });\n\n  const triggers = items.current.map((item) => item?.trigger);\n  const contents = items.current.map((item) => item?.content);\n\n  // console.log({ triggers, contents });\n\n  return (\n    <nav\n      className={cn('relative', className)}\n      ref={wrapperRef}\n      onMouseLeave={() => set({ hovering: null })}\n    >\n      <NavMenuTriggerWrapper menuClassName={menuClassName} items={triggers} />\n      <NavMenuContentWrapper\n        floatingOffset={floatingOffset}\n        fullscreen={fullscreen}\n        menuContentClassName={menuContentClassName}\n        items={contents}\n      />\n    </nav>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;;AAYO,SAAS,YAAY,EAAE,QAAQ,EAAoB;IACxD,qBACE;kBACG,gUAAM,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC;YAC7B,kBACE,gUAAM,cAAc,CAAC,UACrB,CAAC,MAAM,IAAI,mLAAuB,MAAM,IAAI,+KAAmB,GAC/D;gBACA,OAAO;YACT;YACA,OAAO;QACT;;AAGN;AAEA,YAAY,WAAW,GAAG;AAWnB,SAAS,mBAAmB,KAA8B;IAC/D,MAAM,EACJ,SAAS,EACT,aAAa,EACb,oBAAoB,EACpB,QAAQ,EACR,UAAU,EACV,cAAc,EACf,GAAG;IACJ,MAAM,aAAa,gUAAM,MAAM,CAAiB;IAChD,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;IAEvB,gUAAM,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO;QACnC,MAAM,UAAmB;YACvB,SAAS;gBAAE,WAAW;gBAAM,OAAO;YAAK;YACxC,SAAS;gBAAE,WAAW;gBAAM,OAAO;YAAK;QAC1C;QAEA,kBACE,gUAAM,cAAc,CAAC,UACrB,MAAM,KAAK,IACX,MAAM,KAAK,CAAC,QAAQ,IACpB,MAAM,KAAK,CAAC,QAAQ,CAAC,MAAM,EAC3B;YACA,OAAO,OAAO,UAAU,IAAI,CAAC;gBAC3B,kBAAI,gUAAM,cAAc,CAAC,OAAO;oBAC9B,IAAI,KAAK,IAAI,iLAAqB;wBAChC,QAAQ,OAAO,CAAC,SAAS,GAAG;wBAC5B,QAAQ,OAAO,CAAC,KAAK,GAAG,KAAK,KAAK;oBACpC,OAAO,IAAI,KAAK,IAAI,iLAAqB;wBACvC,QAAQ,OAAO,CAAC,SAAS,GAAG;wBAC5B,QAAQ,OAAO,CAAC,KAAK,GAAG,KAAK,KAAK;oBACpC;gBACF;YACF;YACA,MAAM,OAAO,CAAC,IAAI,GAAG;QACvB,OAAO,kBACL,gUAAM,cAAc,CAAC,UACrB,MAAM,KAAK,IACX,aAAa;QACb,MAAM,KAAK,CAAC,QAAQ,EACpB;YACA,aAAa;YACb,MAAM,OAAO,MAAM,KAAK,CAAC,QAAQ;YACjC,IAAI,KAAK,IAAI,iLAAqB;gBAChC,QAAQ,OAAO,CAAC,SAAS,GAAG;gBAC5B,QAAQ,OAAO,CAAC,KAAK,GAAG,KAAK,KAAK;YACpC,OAAO,IAAI,KAAK,IAAI,iLAAqB;gBACvC,QAAQ,OAAO,CAAC,SAAS,GAAG;gBAC5B,QAAQ,OAAO,CAAC,KAAK,GAAG,KAAK,KAAK;YACpC;YACA,MAAM,OAAO,CAAC,IAAI,GAAG;QACvB;IACF;IAEA,MAAM,WAAW,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,OAAS,MAAM;IACnD,MAAM,WAAW,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,OAAS,MAAM;IAEnD,uCAAuC;IAEvC,qBACE,wVAAC;QACC,WAAW,0IAAG,YAAY;QAC1B,KAAK;QACL,cAAc,IAAM,IAAI;gBAAE,UAAU;YAAK;;0BAEzC;gBAAuB,eAAe;gBAAe,OAAO;;;;;;0BAC5D;gBACE,gBAAgB;gBAChB,YAAY;gBACZ,sBAAsB;gBACtB,OAAO;;;;;;;;;;;;AAIf"}},
    {"offset": {"line": 1221, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1226, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/layouts/nav-menu/nav-menu-utils.ts"],"sourcesContent":["import { Dispatch, MutableRefObject } from 'react';\nimport { InitialState } from './nav-menu-types';\n\nexport function navMenuReducer(prev: InitialState, next: InitialState) {\n  return { ...prev, ...next };\n}\n\nexport function handleMouseEnter({\n  index,\n  el,\n  set,\n  contentRefs,\n}: {\n  index: number;\n  el: HTMLElement;\n  set: Dispatch<any>;\n  contentRefs: MutableRefObject<(HTMLElement | null)[]>;\n}) {\n  set({\n    hovering: index,\n    popoverLeft: el.offsetLeft,\n    hoveringWidth: el.offsetWidth,\n    hoveringElRect: el.getBoundingClientRect(),\n  });\n  const contentElement = contentRefs.current[index];\n  if (contentElement) {\n    set({\n      popoverHeight: contentElement.offsetHeight,\n      popoverWidth: contentElement.offsetWidth,\n    });\n  }\n}\n"],"names":[],"mappings":";;;;AAGO,SAAS,eAAe,IAAkB,EAAE,IAAkB;IACnE,OAAO;QAAE,GAAG,IAAI;QAAE,GAAG,IAAI;IAAC;AAC5B;AAEO,SAAS,iBAAiB,EAC/B,KAAK,EACL,EAAE,EACF,GAAG,EACH,WAAW,EAMZ;IACC,IAAI;QACF,UAAU;QACV,aAAa,GAAG,UAAU;QAC1B,eAAe,GAAG,WAAW;QAC7B,gBAAgB,GAAG,qBAAqB;IAC1C;IACA,MAAM,iBAAiB,YAAY,OAAO,CAAC,MAAM;IACjD,IAAI,gBAAgB;QAClB,IAAI;YACF,eAAe,eAAe,YAAY;YAC1C,cAAc,eAAe,WAAW;QAC1C;IACF;AACF"}},
    {"offset": {"line": 1251, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1256, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/layouts/nav-menu/nav-menu.tsx"],"sourcesContent":["'use client';\nimport { Reducer, useReducer, useRef } from 'react';\nimport {\n  NavMenuProvider,\n  initialState,\n} from '@/layouts/nav-menu/nav-menu-context';\nimport { NavMenuTrigger } from '@/layouts/nav-menu/nav-menu-trigger';\nimport {\n  NavMenuItem,\n  NavMenuItemWrapper,\n} from '@/layouts/nav-menu/nav-menu-item';\nimport { NavMenuContent } from '@/layouts/nav-menu/nav-menu-content';\nimport type {\n  NavMenuProps,\n  InitialState,\n  ContentUiProps,\n  ItemRef,\n} from '@/layouts/nav-menu/nav-menu-types';\nimport { navMenuReducer } from '@/layouts/nav-menu/nav-menu-utils';\n\nexport default function NavMenu(props: NavMenuProps) {\n  const {\n    className,\n    menuClassName,\n    menuContentClassName,\n    fullscreen = false,\n    dir = 'ltr',\n    children,\n    floatingOffset = 10,\n  } = props;\n  const [state, set] = useReducer<Reducer<InitialState, any>>(\n    navMenuReducer,\n    initialState\n  );\n  const contentRefs = useRef<(HTMLElement | null)[]>([]);\n  const contentUiPropsRefs = useRef<(ContentUiProps | null)[]>([]);\n  const items = useRef<(ItemRef | null)[]>([]);\n\n  function handleMouseEnter(index: number, el: HTMLElement) {\n    set({\n      hovering: index,\n      popoverLeft: el.offsetLeft,\n      hoveringWidth: el.offsetWidth,\n      hoveringElRect: el.getBoundingClientRect(),\n    });\n    const contentElement = contentRefs.current[index];\n    if (contentElement) {\n      set({\n        popoverHeight: contentElement.offsetHeight,\n        popoverWidth: contentElement.offsetWidth,\n      });\n    }\n  }\n\n  const value = {\n    ...state,\n    set,\n    contentRefs,\n    contentUiPropsRefs,\n    items,\n    dir,\n    handleMouseEnter,\n  };\n\n  return (\n    <NavMenuProvider value={value}>\n      <NavMenuItemWrapper\n        fullscreen={fullscreen}\n        className={className}\n        menuClassName={menuClassName}\n        menuContentClassName={menuContentClassName}\n        floatingOffset={floatingOffset}\n      >\n        {children}\n      </NavMenuItemWrapper>\n    </NavMenuProvider>\n  );\n}\n\nNavMenu.Item = NavMenuItem;\nNavMenu.Trigger = NavMenuTrigger;\nNavMenu.Content = NavMenuContent;\nNavMenu.displayName = 'NavMenu';\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;;;AAoBe,SAAS,QAAQ,KAAmB;IACjD,MAAM,EACJ,SAAS,EACT,aAAa,EACb,oBAAoB,EACpB,aAAa,KAAK,EAClB,MAAM,KAAK,EACX,QAAQ,EACR,iBAAiB,EAAE,EACpB,GAAG;IACJ,MAAM,CAAC,OAAO,IAAI,GAAG;IAIrB,MAAM,cAAc,+TAA+B,EAAE;IACrD,MAAM,qBAAqB,+TAAkC,EAAE;IAC/D,MAAM,QAAQ,+TAA2B,EAAE;IAE3C,SAAS,iBAAiB,KAAa,EAAE,EAAe;QACtD,IAAI;YACF,UAAU;YACV,aAAa,GAAG,UAAU;YAC1B,eAAe,GAAG,WAAW;YAC7B,gBAAgB,GAAG,qBAAqB;QAC1C;QACA,MAAM,iBAAiB,YAAY,OAAO,CAAC,MAAM;QACjD,IAAI,gBAAgB;YAClB,IAAI;gBACF,eAAe,eAAe,YAAY;gBAC1C,cAAc,eAAe,WAAW;YAC1C;QACF;IACF;IAEA,MAAM,QAAQ;QACZ,GAAG,KAAK;QACR;QACA;QACA;QACA;QACA;QACA;IACF;IAEA,qBACE;QAAiB,OAAO;kBACtB,cAAA;YACE,YAAY;YACZ,WAAW;YACX,eAAe;YACf,sBAAsB;YACtB,gBAAgB;sBAEf;;;;;;;;;;;AAIT;AAEA,QAAQ,IAAI;AACZ,QAAQ,OAAO;AACf,QAAQ,OAAO;AACf,QAAQ,WAAW,GAAG"}},
    {"offset": {"line": 1329, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}